@page "/v/{name}"
@model UploadPreviewModel
@{
    ViewData["Title"] = "File Preview";
}

<div class="navbar">
    <img class="pulse animated infinite" src="~/img/logo.png">
    <strong>Name: @Model.Upload.Filename</strong>
    <strong>Type: @Model.Upload.ContentType</strong>
</div>

<div class="mainarea" style="background-color:@System.Drawing.ColorTranslator.ToHtml(Model.PreviewOptions.BackgroundColor)">
</div>
<main class="main" style="background-color:@System.Drawing.ColorTranslator.ToHtml(Model.PreviewOptions.BoxColor)">
    @if (Model.Upload.ContentType.FitsInContentCategory(Models.ContentCategory.Image))
    {
        <img src="@Model.GetRelativeDownloadUrl()" />
    }
    else if (Model.Upload.ContentType.FitsInContentCategory(Models.ContentCategory.Text))
    {
        <span style="white-space: pre-wrap;">@await Model.LoadContentAsTextAsync()</span>
    }
    else
    {
        <strong style="font-size: 48px;">This file type does not support preview!</strong>
    }
</main>



<div class="viewarea">
    <button onclick="location.href = '@Model.GetRelativeDownloadUrl(directDownload: false)';" class="viewbutton">
        <img src="~/img/eye.png">
    </button>
</div>

<div class="dlarea">
    <button onclick="location.href = '@Model.GetRelativeDownloadUrl(directDownload: true)';" class="dlbutton">
        <img src="~/img/dl.png">
    </button>
</div>

@section Head{

    <meta property="og:site_name" content="Fileshare" />
    <meta property="og:description" content="Nice file innit, eh?" />
    <meta property="og:url" content="@Request.Path.ToUriComponent()" />
    <meta name="theme-color" content="#6bfc03">

    @if (Model.Upload.ContentType.FitsInContentCategory(Models.ContentCategory.Image))
    {
        <meta property="og:image" content="@Model.GetRelativeDownloadUrl()" />
        <meta property="og:image:type" content="@Model.Upload.ContentType" />
        <meta property="og:image:height" content="250" />
    }
    else if (Model.Upload.ContentType.FitsInContentCategory(Models.ContentCategory.Video))
    {
        <meta property="og:video" content="@Model.GetRelativeDownloadUrl()" />
        <meta property="og:video:type" content="@Model.Upload.ContentType" />
    }
}